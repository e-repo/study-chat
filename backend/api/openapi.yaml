openapi: 3.0.3
info:
  title: Модуль авторизации для чата
  version: 0.0.1
paths:
  /sign-in:
    post:
      summary: Создание пользователя (регистрация)
      description: Создание нового пользователя по имени и email
      tags:
        - Регистрация
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: Пользователь успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
        '400':
          description: Не валидные данные запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Пользователь уже существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутреняя ошибка сервера, обратитесь к администратору
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /sign-up:
    post:
      summary: Аутентификация пользователя (регистрация)
      description: Аутентификация пользователя по email и паролю
      tags:
        - Регистрация
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthUserRequest'
      responses:
        '201':
          description: Пользователь успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUserResponse'
        '400':
          description: Не валидные данные запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Пользователь уже существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутреняя ошибка сервера, обратитесь к администратору
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /message:
    post:
      summary: Добавление сообщения
      description: Добавление сообщения пользователя
      tags:
        - Сообщение
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMessageRequest'
      responses:
        '201':
          description: Сообщение успешно добавленно
        '400':
          description: Не валидные данные запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутреняя ошибка сервера, обратитесь к администратору
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
#  /users/{id}:
#    get:
#      summary: Get a users by ID
#      description: Retrieves users details using the users ID provided in the path
#      tags:
#        - users
#      parameters:
#        - in: path
#          name: id
#          required: true
#          schema:
#            type: string
#            format: uuid
#          description: User ID
#      responses:
#        '200':
#          description: User details successfully retrieved
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/GetUserResponse'
#        '400':
#          description: Invalid users ID
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ErrorResponse'
#        '404':
#          description: User not found
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ErrorResponse'
#        '500':
#          description: Failed to get users
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    CreateUserRequest:
      type: object
      required:
        - firstName
        - email
        - password
      properties:
        firstName:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    CreateUserResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid

    AuthUserRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    AuthUserResponse:
      type: object
      required:
        - token
      properties:
        token:
          type: string

    MessageDataRequest:
      type: object
      required:
        - userId
        - userName
        - message
      properties:
        userId:
          type: integer
          format: int64
        userName:
          type: string
          minLength: 4
          maxLength: 100
        message:
          type: string
          minLength: 4
          maxLength: 500
    AddMessageRequest:
      type: object
      required:
        - channel
        - data
      properties:
        channel:
          type: string
          minLength: 2
          maxLength: 100
        data:
          $ref: '#/components/schemas/MessageDataRequest'

    ErrorResponse:
      type: object
      properties:
        message:
          type: string